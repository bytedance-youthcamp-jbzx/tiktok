syntax = "proto3";
option go_package = "relation";
package relation;

import "user.proto";
//  ============================关注or取消关注===================================
message RelationActionRequest {
  //  int64 user_id = 1; // 用户id
  string token = 1; // 用户鉴权token
  int64 to_user_id = 2; // 对方用户id
  int32 action_type = 3; // 1-关注，2-取消关注
}
message RelationActionResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
}

//  ==============================关注列表========================================
message RelationFollowListRequest {
  int64 user_id = 1; // 用户id
  string token = 2; // 用户鉴权token
}
message RelationFollowListResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated user.User user_list = 3; // 用户信息列表
}

//  ==============================粉丝列表=======================================
message RelationFollowerListRequest {
  int64 user_id = 1; // 用户id
  string token = 2; // 用户鉴权token
}
message RelationFollowerListResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated user.User user_list = 3; // 用户列表
}

//  ==============================好友列表=======================================
message RelationFriendListRequest{
  int64 user_id = 1; // 用户id
  string token = 2; // 用户鉴权token
}
message RelationFriendListResponse{
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated FriendUser user_list = 3; // 用户列表
}

message FriendUser {
  string message = 1; // 和该好友的最新聊天消息
  int64 msgType = 2; // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
  int64 id = 3; // 用户id
  string name = 4;  // 用户名称
  int64 follow_count = 5; // 关注总数
  int64 follower_count = 6; // 粉丝总数
  bool is_follow = 7; //true-已关注，false-未关注
  string avatar = 8;  // 用户头像
  string background_image = 9;  // 用户个人页顶部大图
  string signature = 10; // 个人简介
  int64 total_favorited = 11;  // 获赞数量
  int64 work_count = 12;  // 作品数量
  int64 favorite_count = 13;  // 点赞数量
}

service RelationService {
  rpc RelationAction(RelationActionRequest)returns(RelationActionResponse);
  rpc RelationFollowList(RelationFollowListRequest)returns(RelationFollowListResponse);
  rpc RelationFollowerList(RelationFollowerListRequest)returns(RelationFollowerListResponse);
  rpc RelationFriendList(RelationFriendListRequest)returns(RelationFriendListResponse);
}