syntax = "proto3";
option go_package = "video";
package video;

import "user.proto";
//  ============================feed视频流======================================
message Video {
  int64 id = 1; // 视频唯一标识
  user.User author = 2; // 视频作者信息
  string play_url = 3; // 视频播放地址
  string cover_url = 4; // 视频封面地址
  int64 favorite_count = 5; // 视频的点赞总数
  int64 comment_count = 6; // 视频的评论总数
  bool is_favorite = 7; // true-已点赞，false-未点赞
  string title = 8; // 视频标题
  int64 share_count = 9;  // 转发数量-本次暂不涉及
}
message FeedRequest {
  int64 latest_time = 1; // 可选参数，限制返回视频的最新投稿时间戳，精确到秒，不填表示当前时间
  string token = 2; // 可选参数，登录用户设置
}
message FeedResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated Video video_list = 3; // 视频列表
  int64 next_time = 4; // 本次返回的视频中，发布最早的时间，作为下次请求时的latest_time
}

//  ===============================视频投稿==================================
message PublishActionRequest{
  string token = 1;
  bytes data = 2;
  string title = 3;
}
message PublishActionResponse {
  int32 status_code = 1;
  string status_msg = 2;
}

//  ===============================发布列表==================================
message PublishListRequest{
  int64 user_id = 1;
  string token = 2;
}
message PublishListResponse{
  int32 status_code = 1;
  string status_msg = 2;
  repeated Video video_list = 3;
}
service VideoService {
  rpc Feed (FeedRequest) returns (FeedResponse);
  rpc PublishAction (PublishActionRequest) returns (PublishActionResponse);
  rpc PublishList (PublishListRequest) returns (PublishListResponse);
}


